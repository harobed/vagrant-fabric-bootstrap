==========================
Vagrant + fabric bootstrap
==========================

`vagrant-fabric-bootstrap <https://github.com/harobed/vagrant-fabric-bootstrap>`_ is `my <http://stephane-klein.info>`_ bootstrap to integrate `Vagrant <http://www.vagrantup.com/>`_ in my development projects.

This scaffolding contain :

* Debian Squeeze 64bit base box
* `vagrant-hostmaster <https://github.com/mosaicxm/vagrant-hostmaster>`_ parameters
* `provision <https://github.com/harobed/vagrant-fabric-bootstrap/blob/master/Vagrantfile#L18>`_ to append automatically
  vagrant ssh public key to root account
* `fabfile <https://github.com/harobed/vagrant-fabric-bootstrap/blob/master/fabfile.py>`_ bootstrap
* and `buildout <http://www.buildout.org/>`_ files

More info : contact me at `contact@stephane-klein.info <mailto:contact@stephane-klein.info>`_


Prerequisites
=============

On Ubuntu 12.10
---------------

Prerequisites :

.. code-block:: sh

    $ sudo apt-get install virtualbox rubygem1.8
    $ gem install vagrant vagrant-hostmaster

On Mac OS X
-----------

Prerequisites :

.. code-block:: sh

    $ gem install vagrant vagrant-hostmaster


Quickstart
==========

Clone `vagrant-fabric-bootstrap <https://github.com/harobed/vagrant-fabric-bootstrap>`_ project :

.. code-block:: sh

    $ git clone https://github.com/harobed/vagrant-fabric-bootstrap.git




Install Python dependencies (`fabric <http://docs.fabfile.org/>`_…) with *buildout* :

.. code-block:: sh

    $ python bootstrap.py
    $ bin/buildout


.. Note::

    `vagrant-hostmaster <https://github.com/mosaicxm/vagrant-hostmaster>`_ is a Vagrant plugin to 
    manage ``/etc/hosts`` entries on both the host OS **and** guest VMs.

    You can configure the hostname with this line in your ``Vagrantfile``

    ::

        config.vm.host_name = "vagrant.example.com"
        config.hosts.name = "vagrant.example.com"
        config.hosts.aliases = "example.com"

Download and start *vagrant* VM :

.. code-block:: sh

    $ vagrant up

You can test *ping* command on hostname configured by *vagrant-hostmaster* :

.. code-block:: sh

    $ ping example.com
    PING example.com (192.168.33.10): 56 data bytes
    64 bytes from 192.168.33.10: icmp_seq=0 ttl=64 time=0.383 ms
    64 bytes from 192.168.33.10: icmp_seq=1 ttl=64 time=0.462 ms

Execute *fabric* install :

.. code-block:: sh

    $ bin/fab vagrant install
    [127.0.0.1] Executing task 'install'
    [127.0.0.1] run: whoami
    [127.0.0.1] out: root
    [127.0.0.1] out: 

Notes
=====

Don't forget to place Mac Address in Vagrantfile
------------------------------------------------

In ``Vagrantfile`` I have set mac address :
 
::

    config.vm.network :hostonly, "192.168.33.10", :mac => "080027e5f699"


**vagrant gem install** vagrant-hostmaster
------------------------------------------

If `vagrant-hostmaster <https://github.com/mosaicxm/vagrant-hostmaster>`_ is not installed globally,
you can install *vagrant-hostmaster* localy into vagrant's isolated RubyGems instance.

But, be careful, if you launch command below in folder that contain a *Vagrantfile* 
with ``config.hosts`` parameter, you will get an error. Then, do ``cd ..`` before you execute
command below :

.. code-block:: sh

    $ vagrant gem install vagrant-hostmaster


Error « 'method_missing': undefined method 'hosts' »
----------------------------------------------------

If you have an error like this :

::

    …/lib/vagrant/config/top.rb:29:in `method_missing': undefined method `hosts' for #<Vagrant::Config::Top:0x007f845914a980> (NoMethodError)

leave folder which contain *Vagrantfile* before launch ``vagrant gem install vagrant-hostmaster``.
